{"version":3,"file":"static/js/741.dd37eeaa.chunk.js","mappings":"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","sources":["projects/dvnametags/src/js/NavPage.js","projects/dvnametags/src/js/HomePage.js","projects/dvnametags/src/js/StatusPage.js","projects/dvnametags/src/js/App.js","js/Projects.js","projects/dvnametags/src/js/CreatePreviewImage.js"],"sourcesContent":["import React from 'react';\r\nimport { Navbar, Container } from 'react-bootstrap';\r\nimport '../css/nav.css';\r\nimport '../css/app.css';\r\nimport {\r\n    Outlet\r\n} from \"react-router-dom\";\r\n\r\nfunction NavPage() {\r\n    return (\r\n        <Container className=\"title-banner-container print-hide\">\r\n            <Navbar id=\"title-banner\">\r\n                <h3 id=\"banner-h3\">\r\n                    Deer Valley Nametags\r\n                </h3>\r\n                <p id=\"under-banner\">\r\n                    (Demo Only)\r\n                </p>\r\n            </Navbar>\r\n        </Container>\r\n    );\r\n  }\r\n  \r\n  export default NavPage;\r\n  ","import React from 'react';\r\nimport { \r\n    Container,\r\n    Row,\r\n    Col,\r\n    Button\r\n} from 'react-bootstrap';\r\nimport {\r\n    Link,\r\n    Outlet\r\n} from \"react-router-dom\";\r\nimport '../css/nav.css';\r\nimport CreatePreviewImage from './CreatePreviewImage.js';\r\n\r\n\r\nfunction HomePage() {\r\n    // here is where we list out the starting tags, data format first\r\n    const startingTags = [{\r\n        colorCode: 1,\r\n        name: \"Green Tag\",\r\n        secondLine: \"Indoor\",\r\n        thirdLine: \"\"\r\n    },{\r\n        colorCode: 2,\r\n        name: \"Green Tag Deerhead\",\r\n        secondLine: \"Indoor\",\r\n        thirdLine: \"\"\r\n    },{\r\n        colorCode: 3,\r\n        name: \"Bronze Tag\",\r\n        secondLine: \"Indoor Lodges\",\r\n        thirdLine: \"\"\r\n    },{\r\n        colorCode: 15,\r\n        name: \"Black Tag\",\r\n        secondLine: \"Indoor\",\r\n        thirdLine: \"\"\r\n    },{\r\n        colorCode: 14,\r\n        name: \"Black Diamond Tag\",\r\n        secondLine: \"-----------------------------\",\r\n        thirdLine: \"Black Diamond Lodge\"\r\n    },{\r\n        colorCode: 16,\r\n        name: \"Club 1981 Tag\",\r\n        secondLine: \"Club 1981\",\r\n        thirdLine: \"\"\r\n    },{\r\n        colorCode: 4,\r\n        name: \"Outdoor Velcro Tag\",\r\n        secondLine: \"Regular Outdoor\",\r\n        thirdLine: \"\"\r\n    },{\r\n        colorCode: 12,\r\n        name: \"Ski Patrol\",\r\n        secondLine: \"Ski Patrol Only\",\r\n        thirdLine: \"\"\r\n    },{\r\n        colorCode: 13,\r\n        name: \"Old Black Card Tags\",\r\n        secondLine: \"Old Under Armour Window Tags\",\r\n        thirdLine: \"\"\r\n    }];\r\n\r\n    return (\r\n        <Container className=\"mt-1 justify-content-center\">\r\n            <Row className=\"justify-content-center nav-h4-bar-bg\">\r\n                <Col xs=\"auto\">\r\n                    <h4 className=\"nav-h4-bar\">\r\n                        CLICK TAG TYPE TO GET STARTED or GOTO\r\n                    </h4>\r\n                </Col>\r\n                <Col xs=\"auto\">\r\n                    <Link to=\"status\">\r\n                        <Button>\r\n                            ORDER STATUS\r\n                        </Button>\r\n                    </Link>\r\n                </Col>\r\n            </Row>\r\n            <Row className=\"justify-content-between mt-3\">\r\n                {\r\n                    startingTags.map(( mapItem, index ) => \r\n                        <Col className=\"p-0 mb-1 justify-content-center start-tag-container\" xs=\"auto\" key={ index }>\r\n                            <div className=\"start-tag\">\r\n                                <CreatePreviewImage data={ mapItem } />\r\n                            </div>\r\n                        </Col>\r\n                    )\r\n                }\r\n            </Row>\r\n        </Container>\r\n    );\r\n}\r\n  \r\nexport default HomePage;","import React, { \r\n    useState, \r\n    useParams,\r\n    Suspense,\r\n    lazy\r\n} from 'react';\r\nimport { \r\n    Container, \r\n    Button,\r\n    Row,\r\n    Col,\r\n    Spinner,\r\n    InputGroup,\r\n    FormControl\r\n} from 'react-bootstrap';\r\nimport { Link } from \"react-router-dom\";\r\nimport '../css/nav.css';\r\nimport '../css/tags.css';\r\nimport '../css/admin.css';\r\n\r\n\r\n\r\n\r\n\r\n// lazy loads\r\nconst CreatePreviewImage = lazy( () => import('./CreatePreviewImage.js'));\r\n\r\n\r\n// lazy load spinner\r\nconst renderLoader = (\r\n    <Spinner variant=\"danger\" animation=\"border\" role=\"status\">\r\n      <span className=\"sr-only\">\r\n        Loading...\r\n      </span>\r\n    </Spinner>\r\n  );\r\n\r\n\r\nfunction StatusPage(props){\r\n    // tag rows of data, these MUST be filled with the data type or else it will freak out\r\n    const[dataRow, setDataRow] = useState([{\r\n        id: 0,\r\n        data: {\r\n            color: 3,\r\n            name: \"Max Powers\",\r\n            titlecity: \"Lodging\",\r\n            comments: \"\",\r\n            requestor: \"max in lodging\",\r\n            status: \"Still Working...\",\r\n            statusClass: \"status-yellow\",\r\n            daysAgo: 0.2,\r\n            quantity: 2,\r\n        }\r\n    },{\r\n        id: 1,\r\n        data: {\r\n            color: 12,\r\n            name: \"Lisa Livesaver\",\r\n            titlecity: \"Head Safety Supervisor\",\r\n            comments: \"ski patrol at silver lake thx\",\r\n            requestor: \"Felice\",\r\n            thirdline: \"Ski Patrol\",\r\n            status: \"Still Working...\",\r\n            statusClass: \"status-yellow\",\r\n            daysAgo: 1.7,\r\n            quantity: 3,\r\n        }\r\n    },{\r\n        id: 2,\r\n        data: {\r\n            color: 2,\r\n            name: \"Dodge Chefman\",\r\n            titlecity: \"Empire Chef\",\r\n            comments: \"\",\r\n            requestor: \"keep @ emp\",\r\n            status: \"Done!\",\r\n            statusClass: \"status-green\",\r\n            daysAgo: 1.7,\r\n            quantity: 2,\r\n        }\r\n    }]);\r\n\r\n    // grab id\r\n    //const thisColorCode = parseInt(useParams().id);\r\n\r\n    // return\r\n    return (\r\n        <Container>\r\n            <Row className=\"justify-content-between mt-1 nav-h4-bar-bg print-hide\">\r\n                <Col>\r\n                    <Link to=\"/dv/\">\r\n                        <Button>\r\n                            HOME\r\n                        </Button>\r\n                    </Link>\r\n                </Col>\r\n                <Col xs=\"auto\">\r\n                    <h4 className=\"nav-h4-bar\">\r\n                        STATUS for UNFINISHED TAGS:\r\n                    </h4>\r\n                </Col>\r\n                <Col xs=\"auto\" className=\"p-0\">\r\n                <InputGroup id=\"status-search-bar\">\r\n                    <FormControl\r\n                        placeholder=\"search disabled for demo\"\r\n                        aria-label=\"Search\"\r\n                        aria-describedby=\"basic-addon1\"\r\n                        id=\"status-search-bar-inner\"\r\n                    />\r\n                </InputGroup>\r\n                </Col>\r\n            </Row>\r\n            {\r\n                dataRow.map((mapItem, index) => \r\n                    <Row className=\"mt-1 justify-content-between status-row\" key={ \"status-\" + mapItem.id }>\r\n                        <Col xs={ 12 } md={ 6 } className=\"px-0\">\r\n                            <Suspense fallback={ renderLoader }>\r\n                                <CreatePreviewImage data={{ \r\n                                    name: mapItem.data.name,\r\n                                    secondLine: mapItem.data.titlecity,\r\n                                    thirdLine: mapItem.data.thirdline,\r\n                                    colorCode: mapItem.data.color\r\n                                }} />\r\n                            </Suspense>\r\n                        </Col>\r\n                        <Col xs={ 12 } md={ 4 } className=\"px-0\">\r\n                            <Row>\r\n                                <Col>\r\n                                    <p className=\"status-b-col-text\">Requestor: { mapItem.data.requestor }</p>\r\n                                </Col>\r\n                            </Row>\r\n                            <Row>\r\n                                <Col>\r\n                                    <p className=\"status-b-col-text\">Requested: { mapItem.data.daysAgo } Days Ago</p>\r\n                                </Col>\r\n                            </Row>\r\n                            <Row>\r\n                                <Col>\r\n                                    <p className=\"status-b-col-text\">Quantity: { mapItem.data.quantity }</p>\r\n                                </Col>\r\n                            </Row>\r\n                            <Row>\r\n                                <Col>\r\n                                    <p className=\"status-b-col-text\">Comments: { mapItem.data.comments }</p>\r\n                                </Col>\r\n                            </Row>\r\n                        </Col>\r\n                        <Col xs={ 12 } md={ 2 } className={mapItem.data.statusClass}>\r\n                            <p>STATUS: {mapItem.data.status}</p>\r\n                        </Col>\r\n                    </Row>\r\n                )\r\n            }\r\n        </Container>\r\n    );\r\n  }\r\n  \r\n  export default StatusPage;","import React, { useState } from 'react';\nimport '../css/app.css';\nimport { \n  Container\n} from 'react-bootstrap';\nimport {\n    Routes,\n    Route,\n    Outlet\n} from \"react-router-dom\";\nimport NavPage from './NavPage.js';\nimport HomePage from './HomePage.js';\nimport StatusPage from './StatusPage.js';\n\n\nfunction DVnametags() {\n\n    return (\n        <Container id=\"main-content-container\">\n            <NavPage />\n            <Outlet />\n            <p>(Under Construction)</p>\n        </Container>\n    );\n}\n\nexport default DVnametags;\n","import React, { \r\n    useState,\r\n    lazy,\r\n    Suspense\r\n} from 'react';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faDiagramProject } from '@fortawesome/free-solid-svg-icons';\r\nimport { \r\n    Button, \r\n    Row, \r\n    Col, \r\n    Container \r\n} from 'react-bootstrap';\r\nimport {\r\n    Link,\r\n    Routes,\r\n    Route,\r\n    Outlet\r\n} from \"react-router-dom\";\r\nimport '../css/app.css';\r\nimport ProjectDV from '../projects/dvnametags/src/js/App.js';\r\nimport ProjectDVHomePage from '../projects/dvnametags/src/js/HomePage.js';\r\nimport ProjectDVStatusPage from '../projects/dvnametags/src/js/StatusPage.js';\r\n\r\nconst ProjectThis = lazy( () => import('../projects/this/Proj.js'));\r\nconst ProjectSanAn = lazy( () => import('../projects/puremaintenance/src/App.js'));\r\nconst ProjectRune = lazy( () => import('../projects/rsgold/RSGold.js'));\r\n\r\n// lazy load spinner\r\nconst renderLoader = (\r\n    <span className=\"sr-only\">\r\n        Loading...\r\n    </span>\r\n);\r\n\r\nfunction Projects() {\r\n    const projectListArray = [{\r\n        i: 0,\r\n        label: \"This Site\",\r\n        desc: \"This site. 2022-present.\",\r\n        url: \"/\",\r\n    },{\r\n        i: 1,\r\n        label: \"Deer Valley\",\r\n        desc: \"An internal website I made for Deer Valley Ski Resort Employees to order nametags. 2019-present.\",\r\n        url: \"dv\",\r\n    },{\r\n        i: 2,\r\n        label: \"San Antonio\",\r\n        desc: \"A site I made for my uncle with his Mold Remediation business. 2017.\",\r\n        url: \"sa\",\r\n    },{\r\n        i: 3,\r\n        label: \"Runescape\",\r\n        desc: \"A site I made for some family and myself to sell in game currency. 2014.\",\r\n        url: \"rs\",\r\n    }/*,{\r\n        i: 4,\r\n        label: \"Artisan Zero\",\r\n        pageContent: ,\r\n        desc: \"\",\r\n    }*/];\r\n\r\n\r\n    // dynamically set description and change .active class on link button\r\n    const[description, setDescription] = useState(\"\");\r\n    const[btnActiveIndex, setBtnActiveIndex] = useState(0);\r\n    const changeActivePage = (description, indexOfElement) => {\r\n        setDescription(description);\r\n        setBtnActiveIndex(indexOfElement);\r\n    };\r\n\r\n    return (\r\n        <Container id=\"project-panel\">\r\n            <Row className=\"align-items-center\">\r\n                <FontAwesomeIcon size=\"md\" icon={faDiagramProject} />\r\n                <h2>Projects &nbsp;&#10097;&#10097;&nbsp;</h2>\r\n                <p className=\"mt-2\">{description}</p>\r\n            </Row>\r\n            <Row>\r\n                <Col xs={2} id=\"project-list-parent\">\r\n                {\r\n                    projectListArray.map((item, index) => \r\n                        <Row>\r\n                            <Link to={item.url} onClick={() => changeActivePage(item.desc, item.i)} className={\"btn btn-outline-secondary w-100 mt-2 pt-2 pb-0\" + (index === btnActiveIndex ? \" active\" : \"\")}>\r\n                                <h4>\r\n                                    {item.label}\r\n                                </h4>\r\n                            </Link>\r\n                        </Row>\r\n                    )\r\n                }\r\n                </Col>\r\n                <Col xs={10} id=\"active-page-parent\" className=\"p-0\">\r\n                    <Routes>\r\n                        <Route path=\"/\" element={\r\n                            <Suspense fallback={ renderLoader }>\r\n                                <ProjectThis />\r\n                            </Suspense>\r\n                        } />\r\n                        <Route path=\"/dv\" element={<ProjectDV />}>\r\n                            <Route path=\"\" element={<ProjectDVHomePage />} />\r\n                            <Route path=\"status\" element={<ProjectDVStatusPage />} />\r\n                        </Route>\r\n                        <Route path=\"/sa\" element={\r\n                            <Suspense fallback={ renderLoader }>\r\n                                <ProjectSanAn />\r\n                            </Suspense>\r\n                        } />\r\n                        <Route path=\"/rs\" element={\r\n                            <Suspense fallback={ renderLoader }>\r\n                                <ProjectRune />\r\n                            </Suspense>\r\n                        } />\r\n                    </Routes>\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n    );\r\n}\r\n  \r\n  export default Projects;\r\n  ","import React from 'react';\r\nimport { \r\n    Col,\r\n    Row,\r\n    Container\r\n} from 'react-bootstrap';\r\nimport '../css/tags.css';\r\nimport '../css/signcolor.css';\r\n\r\nfunction colorCodeToClass(colorCode){\r\n    /*\r\n    tagType obj are the classes to apply and default texts on each\r\n    bg background class, \r\n    img is the deer head logo, null-space is the default class that deletes the class\r\n    in the event that there is no deer head\r\n    defName: default Name placeholder\r\n    defSecond: default second line text placeholder\r\n    quantity: the default quantity for each tag type(unchangeable, only for info purposes)\r\n    -\r\n    see CreateSignColor for tag id list\r\n    */\r\n    let tagType = {\r\n        bg: \"\",\r\n        img: \"null-space\",\r\n        defName: \"Name\",\r\n        defSecond: \"City, ST\",\r\n        quantity: \"x2\"\r\n    };\r\n\r\n    // translate color code to image type using classes\r\n    if(colorCode === 1){\r\n                \r\n        // 1: green pin no deerhead(normal nametag and default selection)\r\n        tagType.bg = \"tag-green\";\r\n    }else if(colorCode === 2){\r\n\r\n        // 2: green magnet deerhead\r\n        tagType.bg = \"tag-greenmag\";\r\n        tagType.img = \"dvgold-img\";\r\n    }else if(colorCode === 3){\r\n\r\n        // 3: bronze magnet engraved deerhead\r\n        tagType.bg = \"tag-bronze\";\r\n        tagType.img = \"dvblack-img\";\r\n    }else if(colorCode === 4){\r\n\r\n        // 4: outdoor tags\r\n        tagType.bg = \"tag-outdoor\";\r\n        tagType.img = \"dvwhite-img\";\r\n        tagType.quantity = \"x3\";\r\n    }else if(colorCode === 5){\r\n\r\n        // 5: sign, add details in comments\r\n        tagType.bg = \"tag-sign\";\r\n        tagType.defName = \"Sign\";\r\n        tagType.defSecond = \"Put details in the comments\";\r\n        tagType.quantity = \"\";\r\n    }else if(colorCode === 7){\r\n\r\n        // 7: repeat 1 but with title instead of city, st\r\n        tagType.bg = \"tag-green\";\r\n        tagType.defSecond = \"Title\";\r\n    }else if(colorCode === 8){\r\n\r\n        // 8: repeat 2 but with title instead of city, st\r\n        tagType.bg = \"tag-greenmag\";\r\n        tagType.img = \"dvgold-img\";\r\n        tagType.defSecond = \"Title\";\r\n    }else if(colorCode === 9){\r\n\r\n        // 9: repeat 3 but with title instead of city, st\r\n        tagType.bg = \"tag-bronze\";\r\n        tagType.img = \"dvwhite-img\";\r\n        tagType.defSecond = \"Title\";\r\n    }else if(colorCode === 10){\r\n\r\n        // 10: repeat 4 but with title instead of city, st\r\n        tagType.bg = \"tag-outdoor\";\r\n        tagType.defSecond = \"Title\";\r\n        tagType.quantity = \"x3\";\r\n    }else if(colorCode === 11){\r\n\r\n        // 11: basket check tag\r\n        tagType.bg = \"tag-basket\";\r\n        tagType.defName = \"<p style='font-size:60px;position:relative;top:-20%;'>&#8226;</p>\";\r\n        tagType.defSecond = \"<p style='font-size:19px;position:relative;bottom:30%;'>Basket Check</p>\";\r\n        tagType.quantity = \"\";\r\n    }else if(colorCode === 12){\r\n\r\n        // 12: outdoor tag for ski patrol\r\n        tagType.bg = \"tag-patrol\";\r\n        tagType.img = \"dvpatrol-img\";\r\n        tagType.quantity = \"x3\";\r\n    }else if(colorCode === 13){\r\n\r\n        // 13: old outdoor tags that fit inside old mtn ops uniforms\r\n        tagType.bg = \"tag-oldoutdoor\";\r\n        tagType.quantity = \"x3\";\r\n    }else if(colorCode === 14){\r\n\r\n        // 14: black diamond tags\r\n        tagType.bg = \"tag-blackdiamond\";\r\n        tagType.img = \"dvblackdiamond-img\";\r\n        tagType.quantity = \"x2\";\r\n    }else if(colorCode === 15){\r\n\r\n        // 15: regular black indoor\r\n        tagType.bg = \"tag-black\";\r\n        tagType.quantity = \"x2\";\r\n    }else if(colorCode === 16){\r\n\r\n        // 16: club 1981 -- blk text, silver bg\r\n        tagType.bg = \"tag-blackdiamond\";\r\n        tagType.img = \"dvclub-img\";\r\n        tagType.quantity = \"x2\";\r\n    }else{\r\n\r\n        // anything else, other, details in comments\r\n        tagType.bg = \"tag-other\";\r\n    }\r\n\r\n    // return value, e.g. tagType = { bg: tag-green, img: null-space }\r\n    return tagType;\r\n};\r\n\r\n\r\nfunction CreatePreviewImage(data) {\r\n    /*\r\n    data use format for non signs: \r\n    <CreatePreviewImage data={ \r\n        name,\r\n        secondLine,\r\n        colorCode,\r\n        thirdLine(if it exists)\r\n    } />\r\n    -\r\n    data use format for signs: \r\n    <CreatePreviewImage data={ \r\n        name,\r\n        height,\r\n        width,\r\n        signColor,\r\n        attachment,\r\n        thickness\r\n    } />\r\n    */\r\n\r\n    // console.log(data); // correct injection would be e.g. data.data.colorCode\r\n    let tagType = colorCodeToClass(data.data.colorCode);\r\n    // console.log(tagType.img);\r\n    tagType.bg = tagType.bg + \"  justify-content-between\";\r\n\r\n    // if custom sign\r\n    let pixelHeight;\r\n    let pixelWidth;\r\n    let splitClasses = [];\r\n    let newLineContents = data.data.name;\r\n    // console.log(data.data.colorCode);\r\n    \r\n    if(data.data.colorCode === 5){\r\n        // grab signcolor classes\r\n        // console.log(data.data.quantity);\r\n        splitClasses = data.data.signColor.split(\" / \");\r\n        splitClasses[0] = \"color-\" + splitClasses[0].toLowerCase();\r\n        splitClasses[1] = \"bg-\" + splitClasses[1].toLowerCase();\r\n        \r\n        pixelHeight = parseFloat(data.data.height);\r\n        pixelWidth = parseFloat(data.data.width);\r\n\r\n        // do sign maths\r\n        pixelHeight *= 50;\r\n        pixelWidth *= 50;\r\n        pixelHeight = pixelHeight + \"px\";\r\n        pixelWidth = pixelWidth + \"px\";\r\n\r\n        newLineContents = newLineContents.split(\"\\n\");\r\n        // console.log(newLineContents);\r\n    };\r\n    \r\n\r\n    // return page with compiled data\r\n    return (\r\n        <Col xs={12} md={6} lg={4} className=\"px-0\">\r\n            <Container className=\"\">\r\n                <Row className={ tagType.bg }>\r\n                    {\r\n                        !(tagType.img === \"null-space\") &&\r\n                        <div className={ tagType.img }>\r\n                        </div>\r\n                    }\r\n                    <div className=\"title-parent\">\r\n                        <div className=\"title-text justify-content-center\">\r\n                            { data.data.name }\r\n                        </div>\r\n                        <div className=\"smaller-text justify-content-center\">\r\n                            { data.data.secondLine }\r\n                        </div>\r\n                        <div className=\"smaller-text justify-content-center\">\r\n                            { data.data.thirdLine }\r\n                        </div>\r\n                    </div>\r\n                </Row>\r\n            </Container>\r\n        </Col>\r\n    );\r\n}\r\n\r\nexport default CreatePreviewImage;"],"names":["Container","className","Navbar","id","Row","Col","xs","to","Button","colorCode","name","secondLine","thirdLine","map","mapItem","index","CreatePreviewImage","data","lazy","renderLoader","Spinner","variant","animation","role","props","useState","color","titlecity","comments","requestor","status","statusClass","daysAgo","quantity","thirdline","dataRow","InputGroup","FormControl","placeholder","md","Suspense","fallback","ProjectThis","ProjectSanAn","ProjectRune","description","setDescription","btnActiveIndex","setBtnActiveIndex","size","icon","faDiagramProject","i","label","desc","url","item","onClick","indexOfElement","changeActivePage","path","element","tagType","bg","img","defName","defSecond","colorCodeToClass","splitClasses","newLineContents","signColor","split","toLowerCase","parseFloat","height","width","lg"],"sourceRoot":""}