{"version":3,"file":"static/js/76.301c4cff.chunk.js","mappings":"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","sources":["projects/market/App.js"],"sourcesContent":["import React, {\n    useState,\n    useEffect,\n} from 'react';\nimport './main.css';\nimport {\n    Container,\n    Row,\n    Col,\n    Button,\n} from 'react-bootstrap';\nimport {\n    Chart as ChartJS,\n    CategoryScale,\n    LinearScale,\n    PointElement,\n    LineElement,\n    Title,\n    Tooltip,\n    Legend,\n  } from 'chart.js';\nimport { Line } from 'react-chartjs-2';\n\nChartJS.register(\n    CategoryScale,\n    LinearScale,\n    PointElement,\n    LineElement,\n    Title,\n    Tooltip,\n    Legend\n);\n\nconst chartOptions = {\n    maintainAspectRatio: false,\n    responsive: true,\n    plugins: {\n        legend: {\n            display: true,\n        },\n    },\n    animation: false,\n    radius: 0,\n    borderWidth: 2,\n};\n\n\n\n\nfunction App() {\n    const [money, setMoney] = useState(1000);\n    const [borrow, setBorrow] = useState(0);\n    const [assets, setAssets] = useState(0);\n    const [float, setFloat] = useState(money);\n    const [advisory, setAdvisory] = useState(\"Speed on Fast, Chart will scroll when it gets too large\");\n    const [priceArray, setPriceArray] = useState([200]);\n    const [labelArray, setLabelArray] = useState([0]);\n    const [lastPrice, setLastPrice] = useState(200);\n    const [chartSpeed, setChartSpeed] = useState(100);\n    const [chartAdvisoryLock, setChartAdvisoryLock] = useState(false);\n    const maxChartLength = 500;\n    const priceStep = 1;\n    let momentumFlip = 5;\n\n    \n\n    // price scheduler\n    useEffect(() => {\n        // price engine\n        const newPrice = () => {\n            // price disturbances by modifying momentumFlip\n\n\n            // ----\n            if(lastPrice < 10){\n                // least, starting with lowest\n                // less than 10\n                momentumFlip = 1;\n            }else if(lastPrice < 50){\n                // less than 50\n                momentumFlip = 2;\n            }else if(lastPrice < 100){\n                // less than 100\n                momentumFlip = 4;\n\n                \n            // ----\n            }else if(lastPrice > 350){\n                // greater, starting with highest\n                // greater than 350\n                momentumFlip = 6;\n            }else if(lastPrice > 300){\n                // greater than 300\n                momentumFlip = 8;\n            }else if(lastPrice > 350){\n                // greater than 350\n                momentumFlip = 9;\n            }else{\n                // no chance to momentum\n            };\n\n            // price jump allows price to move by 1, 2, or 3x of priceStep\n            let priceJump;\n            let randomJump = Math.floor((Math.random() * 10) + 0);\n            if(randomJump > 5){\n                // double\n                priceJump = (priceStep * 2);\n            }else if(randomJump > 8){\n                // triple\n                priceJump = (priceStep * 3);\n            }else if(randomJump === 0){\n                // random crash chance\n                momentumFlip = 10;\n                priceJump = (priceStep * 6);\n            }else if(randomJump === 1){\n                // random spike chance\n                momentumFlip = 0;\n                priceJump = (priceStep * 6);\n            }else{\n                // less than 6, do nothing\n                priceJump = priceStep;\n            };\n\n            /*\n            random chance with a momentum divider\n            11 total, 0-10, consider momentumFlip 5: 0-4:drop 5:stay 6-10:raise\n            if momentumFlip goes up means higher chance to drop\n            */\n            let price;\n            let randomFlip = Math.floor((Math.random() * 10) + 0);\n            if(randomFlip === momentumFlip){\n                // no price change\n                price = lastPrice;\n            }else if(randomFlip > momentumFlip){\n                // raise price\n                price = lastPrice + priceJump;\n            }else if(randomFlip < momentumFlip){\n                // lower price\n                price = lastPrice - priceJump;\n            };\n\n            // min price of 1\n            price = Math.max(price, 1);\n\n            // update dynamic lastPrice\n            setLastPrice(price);\n\n            return(price);\n        };\n\n        const interval = setInterval(() => {\n            // run per time schedule\n            newPrice();\n            if(assets > 0){\n                setFloat(money + (lastPrice * assets));\n            }else if(assets < 0){\n                setFloat(money + borrow - (Math.abs(assets) * lastPrice));\n            };\n\n            let arrayLength = [...priceArray].length;\n            if(arrayLength > (maxChartLength - 1)){\n                // hit max chart, so shift\n                let innerPrice = [...priceArray];\n                innerPrice.shift();\n                setPriceArray([...innerPrice, lastPrice]);\n\n                if(chartAdvisoryLock === false){\n                    setAdvisory(\"Chart will now scroll\");\n                    setChartAdvisoryLock(true);\n                };\n\n            }else{\n                // not hit max, do nothing else\n                setLabelArray(current => [...current, 0]);\n                setPriceArray(current => [...current, lastPrice]);\n            }\n        }, chartSpeed);\n        return () => clearInterval(interval);\n    }, [priceArray]);\n\n    const data = {\n        labels: labelArray,\n        datasets: [{\n            label: 'Price of one EmCoin in § Simoleons',\n            data: priceArray,\n            borderColor: 'rgb(255, 99, 132)',\n            backgroundColor: 'rgba(255, 99, 132, 0.5)',\n            pointStyle: 0,\n        }],\n    };\n\n    const buyAsset = () => {\n        if(assets < 0){\n            // covering\n            if(assets === -1){\n                // specifically if you are covering the last asset\n                setAssets(assets + 1);\n                setMoney(money + (borrow - lastPrice))\n                setBorrow(0);\n                setAdvisory(\"covered @ +\" + lastPrice);\n            }else{\n                // covering more than 1 asset\n                let individualBorrow = Math.floor(borrow / Math.abs(assets));\n                setAssets(assets + 1);\n                setMoney(money + (individualBorrow - lastPrice));\n                setBorrow(borrow - individualBorrow);\n                setAdvisory(\"covered @ +\" + lastPrice);\n            }\n        }else{\n            // regular buy\n            // has cash check\n            if(money >= lastPrice){\n                setAssets(assets + 1);\n                setMoney(money - lastPrice);\n                setAdvisory(\"bought @ +\" + lastPrice);\n            }else{\n                // not enough\n                setAdvisory(\"not enough money to buy!\");\n            };\n        };\n    };\n\n    const sellAsset = () => {\n        // check if borrowing\n        if(assets < 1){\n            // borrow\n            // check borrow rate\n            if((borrow + lastPrice) > (money / 2)){\n                setAdvisory(\"can't borrow more than 50% of your money to short!\");\n            }else{\n                // allowed to borrow\n                setAssets(assets - 1);\n                setBorrow(borrow + lastPrice);\n                setAdvisory(\"borrowed @ -\" + lastPrice);\n            }\n        }else{\n            // regular sell\n            setAssets(assets - 1);\n            setMoney(money + lastPrice);\n            setAdvisory(\"sold @ -\" + lastPrice);\n        };\n    };\n\n    const flattenAsset = () => {\n        // check assets\n        if(assets === 0){\n            // nothing to flatten\n            setAdvisory(\"you are not in any trades to flatten!\");\n        }else if(assets > 0){\n            // need to sell\n            setAssets(0);\n            setMoney(money + (assets * lastPrice));\n            setAdvisory(\"sold qty: \" + assets + \" @ -\" + lastPrice + \" ea = \" + (lastPrice * assets) + \" total\");\n        }else if(assets < 0){\n            // need to cover\n            setAssets(0);\n            setMoney(money + (borrow - (lastPrice * Math.abs(assets))));\n            setBorrow(0);\n            setAdvisory(\"covered qty: \" + assets + \" @ -\" + lastPrice + \" ea = \" + (lastPrice * assets) + \" total\");\n        };\n    };\n\n    return (\n        <Container id=\"main-container-mkt\" className=\"pt-3\">\n            <Row className=\"justify-content-center flex-row d-flex\">\n                <Col>\n                    <Row className=\"align-items-center\">\n                        <Col xs=\"auto\">\n                            <h4 className=\"mkt\">Speed: </h4>\n                        </Col>\n                        <Col xs=\"auto\" className=\"px-1\">\n                            <Button className=\"mkt\" onClick={() => {\n                                setChartSpeed(500);\n                                setAdvisory(\"Speed set to Slow\");\n                            }}>Slow</Button>\n                        </Col>\n                        <Col xs=\"auto\" className=\"px-1\">\n                            <Button className=\"mkt\" onClick={() => {\n                                setChartSpeed(100);\n                                setAdvisory(\"Speed set to Fast\");\n                            }}>Fast</Button>\n                        </Col>\n                        <Col xs=\"auto\" className=\"px-1\">\n                            <Button className=\"mkt\" onClick={() => {\n                                setChartSpeed(10);\n                                setAdvisory(\"Speed set to Superfast\");\n                            }}>Superfast</Button>\n                        </Col>\n                    </Row>\n                </Col>\n                <Col>\n                    <Row className=\"justify-content-end pr-5 align-items-center\">\n                        <Col xs=\"auto\" className=\"pr-4\">\n                            <h4 className=\"mktlg\">Money: §{money}</h4>\n                        </Col>\n                        <Col xs=\"auto\" className=\"pr-4\">\n                            <h4 className=\"mktlg\">EmCoin: {assets}</h4>\n                        </Col>\n                    </Row>\n                    <Row className=\"justify-content-end mt-1 pr-5 align-items-center\">\n                        <Col xs=\"auto\" className=\"pr-4\">\n                            <h4 className=\"mktsm\">Floating Equity: §{float}</h4>\n                        </Col>\n                        <Col xs=\"auto\" className=\"pr-4\">\n                            <h4 className=\"mktsm\">Borrowed for shorting: §{borrow}</h4>\n                        </Col>\n                    </Row>\n                </Col>\n            </Row>\n            <Row className=\"mt-1\">\n                <Col>\n                    <h4 className=\"mkt\">Last Notification: {advisory}</h4>\n                </Col>\n            </Row>\n            <Row>\n                <Col>\n                    <Line options={chartOptions} height={400} data={data} />\n                </Col>\n            </Row>\n            <Row className=\"my-3 ml-5 align-items-center\">\n                <Col xs=\"auto\" className=\"px-1\">\n                    <Button onClick={() => buyAsset()}>Buy</Button>\n                </Col>\n                <Col xs=\"auto\" className=\"px-1\">\n                    <Button onClick={() => sellAsset()}>Sell</Button>\n                </Col>\n                <Col xs=\"auto\" className=\"px-1\">\n                    <Button onClick={() => flattenAsset()}>Flatten</Button>\n                </Col>\n                <Col xs=\"auto\" className=\"pl-5\">\n                    <h4 className=\"mkt\">Last Price: {lastPrice}</h4>\n                </Col>\n            </Row>\n        </Container>\n    );\n}\n\nexport default App;"],"names":["ChartJS","register","CategoryScale","LinearScale","PointElement","LineElement","Title","Tooltip","Legend","chartOptions","maintainAspectRatio","responsive","plugins","legend","display","animation","radius","borderWidth","_useState","useState","_useState2","_slicedToArray","money","setMoney","_useState3","_useState4","borrow","setBorrow","_useState5","_useState6","assets","setAssets","_useState7","_useState8","float","setFloat","_useState9","_useState10","advisory","setAdvisory","_useState11","_useState12","priceArray","setPriceArray","_useState13","_useState14","labelArray","setLabelArray","_useState15","_useState16","lastPrice","setLastPrice","_useState17","_useState18","chartSpeed","setChartSpeed","_useState19","_useState20","chartAdvisoryLock","setChartAdvisoryLock","momentumFlip","useEffect","interval","setInterval","priceJump","price","randomJump","Math","floor","random","priceStep","randomFlip","max","newPrice","abs","_toConsumableArray","length","maxChartLength","innerPrice","shift","concat","current","clearInterval","data","labels","datasets","label","borderColor","backgroundColor","pointStyle","_jsxs","Container","id","className","children","Row","_jsx","Col","xs","Button","onClick","Line","options","height","individualBorrow","buyAsset"],"sourceRoot":""}